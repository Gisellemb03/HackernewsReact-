{"ast":null,"code":"import _toConsumableArray from\"/home/gimeba/hackernews-react-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/gimeba/hackernews-react-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gimeba/hackernews-react-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/gimeba/hackernews-react-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import{gql,useMutation}from'@apollo/client';import{AUTH_TOKEN,LINKS_PER_PAGE}from'../constants';import{timeDifferenceForDate}from'../utils';import{FEED_QUERY}from'./LinkList';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var VOTE_MUTATION=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation createVote($linkId: Int!) {\\n    createVote(linkId: $linkId) {\\n      user {\\n        username\\n        email\\n      }\\n      link {\\n        url\\n        description\\n      }\\n    }\\n  }\\n\"])));var Link=function Link(props){var link=props.link;var authToken=localStorage.getItem(AUTH_TOKEN);var take=LINKS_PER_PAGE;var skip=0;var orderBy={createdAt:'desc'};var _useMutation=useMutation(VOTE_MUTATION,{variables:{linkId:link.id},onCompleted:function onCompleted(_ref){var createVote=_ref.createVote;console.log(createVote);},update:function update(cache,_ref2){var vote=_ref2.data.vote;var _cache$readQuery=cache.readQuery({query:FEED_QUERY}),links=_cache$readQuery.links;var updatedLinks=links.map(function(feedLink){if(feedLink.id===link.id){return _objectSpread(_objectSpread({},feedLink),{},{votes:[].concat(_toConsumableArray(feedLink.votes.edges),[vote])});}return feedLink;});cache.writeQuery({query:FEED_QUERY,data:{feed:{links:updatedLinks}}});}}),_useMutation2=_slicedToArray(_useMutation,1),vote=_useMutation2[0];return/*#__PURE__*/_jsxs(\"div\",{className:\"flex mt2 items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"gray\",children:[props.index+1,\".\"]}),authToken&&/*#__PURE__*/_jsx(\"div\",{className:\"ml1 gray f11\",style:{cursor:'pointer'},onClick:vote,children:\"\\u25B2\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml1\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[link.id,\" - \",link.description,\" (\",link.url,\")\"]}),authToken&&/*#__PURE__*/_jsxs(\"div\",{className:\"f6 lh-copy gray\",children:[link.votes.edges.length,\" votes | by\",' ',link.postedBy?link.postedBy.username:'Unknown',' ',timeDifferenceForDate(Date().toLocaleString())]})]})]});};export default Link;","map":{"version":3,"sources":["/home/gimeba/hackernews-react-apollo/src/components/Link.js"],"names":["React","gql","useMutation","AUTH_TOKEN","LINKS_PER_PAGE","timeDifferenceForDate","FEED_QUERY","VOTE_MUTATION","Link","props","link","authToken","localStorage","getItem","take","skip","orderBy","createdAt","variables","linkId","id","onCompleted","createVote","console","log","update","cache","vote","data","readQuery","query","links","updatedLinks","map","feedLink","votes","edges","writeQuery","feed","index","cursor","description","url","length","postedBy","username","Date","toLocaleString"],"mappings":"upBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,WAAd,KAAiC,gBAAjC,CAEA,OAASC,UAAT,CAAqBC,cAArB,KAA2C,cAA3C,CACA,OAASC,qBAAT,KAAsC,UAAtC,CACA,OAASC,UAAT,KAA2B,YAA3B,C,wFAEA,GAAMC,CAAAA,aAAa,CAAGN,GAAH,2QAAnB,CAeA,GAAMO,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACtB,GAAQC,CAAAA,IAAR,CAAiBD,KAAjB,CAAQC,IAAR,CACA,GAAMC,CAAAA,SAAS,CAAGC,YAAY,CAACC,OAAb,CAAqBV,UAArB,CAAlB,CAEA,GAAMW,CAAAA,IAAI,CAAGV,cAAb,CACA,GAAMW,CAAAA,IAAI,CAAG,CAAb,CACA,GAAMC,CAAAA,OAAO,CAAG,CAAEC,SAAS,CAAE,MAAb,CAAhB,CAEA,iBAAef,WAAW,CAACK,aAAD,CAAgB,CACxCW,SAAS,CAAE,CACTC,MAAM,CAAET,IAAI,CAACU,EADJ,CAD6B,CAIxCC,WAAW,CAAE,0BAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,CAC/BC,OAAO,CAACC,GAAR,CAAYF,UAAZ,EACD,CANuC,CAOzCG,MAPyC,iBAOlCC,KAPkC,OAOP,IAAVC,CAAAA,IAAU,OAAlBC,IAAkB,CAAVD,IAAU,CAC/B,qBAAkBD,KAAK,CAACG,SAAN,CAAgB,CAChCC,KAAK,CAAExB,UADyB,CAAhB,CAAlB,CAAQyB,KAAR,kBAAQA,KAAR,CAIF,GAAMC,CAAAA,YAAY,CAAGD,KAAK,CAACE,GAAN,CAAU,SAACC,QAAD,CAAc,CACzC,GAAIA,QAAQ,CAACd,EAAT,GAAgBV,IAAI,CAACU,EAAzB,CAA6B,CAC3B,sCACKc,QADL,MAEEC,KAAK,8BAAMD,QAAQ,CAACC,KAAT,CAAeC,KAArB,GAA4BT,IAA5B,EAFP,GAID,CACD,MAAOO,CAAAA,QAAP,CACD,CARkB,CAArB,CAWAR,KAAK,CAACW,UAAN,CAAiB,CACbP,KAAK,CAAExB,UADM,CAEbsB,IAAI,CAAE,CACJU,IAAI,CAAE,CACJP,KAAK,CAAEC,YADH,CADF,CAFO,CAAjB,EAQD,CA/ByC,CAAhB,CAA1B,8CAAOL,IAAP,kBAkCA,mBACE,aAAK,SAAS,CAAC,sBAAf,wBACE,aAAK,SAAS,CAAC,mBAAf,wBAEE,cAAM,SAAS,CAAC,MAAhB,WAAwBlB,KAAK,CAAC8B,KAAN,CAAc,CAAtC,OAFF,CAIG5B,SAAS,eACR,YACE,SAAS,CAAC,cADZ,CAEE,KAAK,CAAE,CAAE6B,MAAM,CAAE,SAAV,CAFT,CAGE,OAAO,CAAEb,IAHX,oBALJ,GADF,cAeE,aAAK,SAAS,CAAC,KAAf,wBACE,uBACCjB,IAAI,CAACU,EADN,OACaV,IAAI,CAAC+B,WADlB,MACiC/B,IAAI,CAACgC,GADtC,OADF,CAIG/B,SAAS,eACR,aAAK,SAAS,CAAC,iBAAf,WACGD,IAAI,CAACyB,KAAL,CAAWC,KAAX,CAAiBO,MADpB,eACuC,GADvC,CAEGjC,IAAI,CAACkC,QAAL,CAAgBlC,IAAI,CAACkC,QAAL,CAAcC,QAA9B,CAAyC,SAF5C,CAEuD,GAFvD,CAGGxC,qBAAqB,CAACyC,IAAI,GAAGC,cAAP,EAAD,CAHxB,GALJ,GAfF,GADF,CA8BD,CAxED,CA0EA,cAAevC,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { AUTH_TOKEN, LINKS_PER_PAGE } from '../constants';\nimport { timeDifferenceForDate } from '../utils';\nimport { FEED_QUERY } from './LinkList';\n\nconst VOTE_MUTATION = gql`\n  mutation createVote($linkId: Int!) {\n    createVote(linkId: $linkId) {\n      user {\n        username\n        email\n      }\n      link {\n        url\n        description\n      }\n    }\n  }\n`;\n\nconst Link = (props) => {\n  const { link } = props;\n  const authToken = localStorage.getItem(AUTH_TOKEN);\n\n  const take = LINKS_PER_PAGE;\n  const skip = 0;\n  const orderBy = { createdAt: 'desc' };\n\n  const [vote] = useMutation(VOTE_MUTATION, {\n    variables: {\n      linkId: link.id\n    },\n    onCompleted: ({ createVote }) => {\n      console.log(createVote);\n    },\n   update(cache, { data: { vote } }) {\n      const { links } = cache.readQuery({\n        query: FEED_QUERY\n      });\n\n    const updatedLinks = links.map((feedLink) => {\n        if (feedLink.id === link.id) {\n          return {\n            ...feedLink,\n            votes: [...feedLink.votes.edges, vote]\n          };\n        }\n        return feedLink;\n      } );\n\n\n    cache.writeQuery({\n        query: FEED_QUERY,\n        data: {\n          feed: {\n            links: updatedLinks\n          }\n        }\n    });\n  }\n})\n\n  return (\n    <div className=\"flex mt2 items-start\">\n      <div className=\"flex items-center\">\n\n        <span className=\"gray\">{props.index + 1}.</span>\n\n        {authToken && (\n          <div\n            className=\"ml1 gray f11\"\n            style={{ cursor: 'pointer' }}\n            onClick={vote}\n          >\n            â–²\n          </div>\n        )}\n      </div>\n      <div className=\"ml1\">\n        <div>\n        {link.id} - {link.description} ({link.url})\n        </div>\n        {authToken && (\n          <div className=\"f6 lh-copy gray\">\n            {link.votes.edges.length} votes | by{' '}\n            {link.postedBy ? link.postedBy.username : 'Unknown'}{' '}\n            {timeDifferenceForDate(Date().toLocaleString())}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Link;"]},"metadata":{},"sourceType":"module"}