{"ast":null,"code":"var _jsxFileName = \"/home/gimeba/hackernews-react-apollo/src/components/Link.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AUTH_TOKEN, LINKS_PER_PAGE } from '../constants';\n/*const Link = (props) => {\n  const { link } = props;\n  return (\n    <div>\n      <div>\n        {link.description} ({link.url})\n      </div>\n    </div>\n  );\n};*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Link = props => {\n  _s();\n\n  const {\n    link\n  } = props;\n  const authToken = localStorage.getItem(AUTH_TOKEN);\n  const take = LINKS_PER_PAGE;\n  const skip = 0;\n  const orderBy = {\n    createdAt: 'desc'\n  };\n  const [vote] = useMutation(VOTE_MUTATION, {\n    variables: {\n      linkId: link.id\n    },\n    onCompleted: ({\n      createVote\n    }) => {\n      console.log(createVote);\n    },\n\n    update(cache, {\n      data: {\n        vote\n      }\n    }) {\n      const {\n        links\n      } = cache.readQuery({\n        query: FEED_QUERY\n      });\n      const updatedLinks = links.map(feedLink => {\n        if (feedLink.id === link.id) {\n          return { ...feedLink,\n            votes: [...feedLink.votes.edges, vote]\n          };\n        }\n\n        return feedLink;\n      });\n      cache.writeQuery({\n        query: FEED_QUERY,\n        data: {\n          feed: {\n            links: updatedLinks\n          }\n        }\n      });\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mt2 items-start\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gray\",\n        children: [props.index + 1, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), authToken && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml1 gray f11\",\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: vote,\n        children: \"\\u25B2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [link.id, \" - \", link.description, \" (\", link.url, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), authToken && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f6 lh-copy gray\",\n        children: [link.votes.edges.length, \" votes | by\", ' ', link.postedBy ? link.postedBy.username : 'Unknown', ' ', timeDifferenceForDate(Date().toLocaleString())]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Link, \"0VV/DEV2+2i6G/De1rIEbK8fykg=\", true);\n\n_c = Link;\nexport default Link;\n\nvar _c;\n\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"sources":["/home/gimeba/hackernews-react-apollo/src/components/Link.js"],"names":["React","AUTH_TOKEN","LINKS_PER_PAGE","Link","props","link","authToken","localStorage","getItem","take","skip","orderBy","createdAt","vote","useMutation","VOTE_MUTATION","variables","linkId","id","onCompleted","createVote","console","log","update","cache","data","links","readQuery","query","FEED_QUERY","updatedLinks","map","feedLink","votes","edges","writeQuery","feed","index","cursor","description","url","length","postedBy","username","timeDifferenceForDate","Date","toLocaleString"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport { AUTH_TOKEN, LINKS_PER_PAGE } from '../constants';\n\n/*const Link = (props) => {\n  const { link } = props;\n  return (\n    <div>\n      <div>\n        {link.description} ({link.url})\n      </div>\n    </div>\n  );\n};*/\n\nconst Link = (props) => {\n  const { link } = props;\n  const authToken = localStorage.getItem(AUTH_TOKEN);\n\n  const take = LINKS_PER_PAGE;\n  const skip = 0;\n  const orderBy = { createdAt: 'desc' };\n\n  const [vote] = useMutation(VOTE_MUTATION, {\n    variables: {\n      linkId: link.id\n    },\n    onCompleted: ({ createVote }) => {\n      console.log(createVote);\n    },\n   update(cache, { data: { vote } }) {\n      const { links } = cache.readQuery({\n        query: FEED_QUERY\n      });\n\n    const updatedLinks = links.map((feedLink) => {\n        if (feedLink.id === link.id) {\n          return {\n            ...feedLink,\n            votes: [...feedLink.votes.edges, vote]\n          };\n        }\n        return feedLink;\n      });\n\n    cache.writeQuery({\n        query: FEED_QUERY,\n        data: {\n          feed: {\n            links: updatedLinks\n          }\n        }\n    }); \n  }\n})\n\n  return (\n    <div className=\"flex mt2 items-start\">\n      <div className=\"flex items-center\">\n        \n        <span className=\"gray\">{props.index + 1}.</span>\n\n        {authToken && (\n          <div\n            className=\"ml1 gray f11\"\n            style={{ cursor: 'pointer' }}\n            onClick={vote}\n          >\n            â–²\n          </div>\n        )}\n      </div>\n      <div className=\"ml1\">\n        <div>\n        {link.id} - {link.description} ({link.url})\n        </div>\n        {authToken && (\n          <div className=\"f6 lh-copy gray\">\n            {link.votes.edges.length} votes | by{' '}\n            {link.postedBy ? link.postedBy.username : 'Unknown'}{' '}\n            {timeDifferenceForDate(Date().toLocaleString())}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nexport default Link;"]},"metadata":{},"sourceType":"module"}