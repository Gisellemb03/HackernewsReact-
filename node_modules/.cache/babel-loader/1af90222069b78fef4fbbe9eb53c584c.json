{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/gimeba/hackernews-react-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import{gql,useQuery}from'@apollo/client';import{useHistory}from'react-router';import{LINKS_PER_PAGE}from'../constants';import Link from'./Link';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var FEED_QUERY=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  {\\n  links{\\n    id\\n    url\\n    description\\n    postedBy{\\n      id\\n      email\\n      username\\n    }\\n    votes{\\n      edges{\\n        node{\\n          id\\n          link{\\n            id\\n            url\\n            description\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"])));var LinkList=function LinkList(){var _useQuery=useQuery(FEED_QUERY),data=_useQuery.data;return/*#__PURE__*/_jsx(\"div\",{children:data&&/*#__PURE__*/_jsx(_Fragment,{children:data.links.map(function(link,index){return/*#__PURE__*/_jsx(Link,{link:link,index:index},link.id);})})});};export default LinkList;","map":{"version":3,"sources":["/home/gimeba/hackernews-react-apollo/src/components/LinkList.js"],"names":["React","gql","useQuery","useHistory","LINKS_PER_PAGE","Link","FEED_QUERY","LinkList","data","links","map","link","index","id"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,QAAd,KAA8B,gBAA9B,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,gGAQA,MAAO,IAAMC,CAAAA,UAAU,CAAGL,GAAH,mWAAhB,CAgCP,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,cAAiBL,QAAQ,CAACI,UAAD,CAAzB,CAAQE,IAAR,WAAQA,IAAR,CAIA,mBACA,qBACCA,IAAI,eACH,yBACGA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,SAACC,IAAD,CAAOC,KAAP,qBACd,KAAC,IAAD,EAAoB,IAAI,CAAED,IAA1B,CAAgC,KAAK,CAAEC,KAAvC,EAAWD,IAAI,CAACE,EAAhB,CADc,EAAf,CADH,EAFF,EADA,CAWD,CAhBH,CAoBA,cAAeN,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { useHistory } from 'react-router';\nimport { LINKS_PER_PAGE } from '../constants';\nimport Link from './Link';\n\n \n\n \n\n \n\nexport const FEED_QUERY = gql`\n  {\n  links{\n    id\n    url\n    description\n    postedBy{\n      id\n      email\n      username\n    }\n    votes{\n      edges{\n        node{\n          id\n          link{\n            id\n            url\n            description\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\n \n\n \n\n\nconst LinkList = () => {\n    const { data } = useQuery(FEED_QUERY);\n\n \n\n    return (\n    <div>\n    {data && (\n      <>\n        {data.links.map((link, index) => (\n          <Link key={link.id} link={link} index={index} />\n        ))}\n      </>\n    )}\n  </div>\n    );\n  };\n\n \n\nexport default LinkList;"]},"metadata":{},"sourceType":"module"}