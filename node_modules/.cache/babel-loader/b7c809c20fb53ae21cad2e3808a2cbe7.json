{"ast":null,"code":"var _jsxFileName = \"/home/gimeba/hackernews-react-apollo/src/components/LinkList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from './Link';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FEED_QUERY = gql`\n{\n    links{\n      url\n      id\n      description\n    }\n  }\n`;\n\nconst LinkList = () => {\n  _s();\n\n  const {\n    data\n  } = useQuery(FEED_QUERY);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.links.map((link, index) => /*#__PURE__*/_jsxDEV(Link, {\n        link: link,\n        index: index\n      }, link.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LinkList, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = LinkList;\nexport default LinkList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkList\");","map":{"version":3,"sources":["/home/gimeba/hackernews-react-apollo/src/components/LinkList.js"],"names":["React","Link","useQuery","gql","FEED_QUERY","LinkList","data","links","map","link","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;AAGA,MAAMC,UAAU,GAAGD,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAME,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACE,UAAD,CAAzB;AAEA,sBACE;AAAA,cACGE,IAAI,iBACH;AAAA,gBACGA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACd,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAED,IAA1B;AAAgC,QAAA,KAAK,EAAEC;AAAvC,SAAWD,IAAI,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdD;;GAAMN,Q;UACaH,Q;;;KADbG,Q;AAgBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport Link from './Link';\nimport { useQuery, gql } from '@apollo/client';\n\n\nconst FEED_QUERY = gql`\n{\n    links{\n      url\n      id\n      description\n    }\n  }\n`;\n\nconst LinkList = () => {\n  const { data } = useQuery(FEED_QUERY);\n\n  return (\n    <div>\n      {data && (\n        <>\n          {data.links.map((link, index) => (\n            <Link key={link.id} link={link} index={index} />\n          ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default LinkList;"]},"metadata":{},"sourceType":"module"}