{"ast":null,"code":"var _jsxFileName = \"/home/gimeba/hackernews-react-apollo/src/components/LinkList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client'; //import { useHistory } from 'react-router';\n\nimport { LINKS_PER_PAGE } from '../constants';\nimport Link from './Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FEED_QUERY = gql`\n  {\n  links{\n    id\n    url\n    postedBy{\n      id\n      email\n    }\n    votes{\n      edges{\n        node{\n          id\n          link{\n            id\n            url\n            description\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst LinkList = () => {\n  _s();\n\n  const {\n    data\n  } = useQuery(FEED_QUERY);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.links.map((link, index) => /*#__PURE__*/_jsxDEV(Link, {\n        link: link,\n        index: index\n      }, link.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LinkList, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = LinkList;\nexport default LinkList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkList\");","map":{"version":3,"sources":["/home/gimeba/hackernews-react-apollo/src/components/LinkList.js"],"names":["React","gql","useQuery","LINKS_PER_PAGE","Link","FEED_QUERY","LinkList","data","links","map","link","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B,C,CACA;;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,OAAO,MAAMC,UAAU,GAAGJ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBO;;AAyBP,MAAMK,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAWL,QAAQ,CAACG,UAAD,CAAzB;AAEA,sBACF;AAAA,cACGE,IAAI,iBACH;AAAA,gBACGA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACd,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAED,IAA1B;AAAgC,QAAA,KAAK,EAAEC;AAAvC,SAAWD,IAAI,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAFJ;AAAA;AAAA;AAAA;AAAA,UADE;AAWD,CAdH;;GAAMN,Q;UACeJ,Q;;;KADfI,Q;AAgBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\n//import { useHistory } from 'react-router';\nimport { LINKS_PER_PAGE } from '../constants';\nimport Link from './Link';\n\nexport const FEED_QUERY = gql`\n  {\n  links{\n    id\n    url\n    postedBy{\n      id\n      email\n    }\n    votes{\n      edges{\n        node{\n          id\n          link{\n            id\n            url\n            description\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst LinkList = () => {\n    const { data } = useQuery(FEED_QUERY);\n\n    return (\n  <div>\n    {data && (\n      <>\n        {data.links.map((link, index) => (\n          <Link key={link.id} link={link} index={index} />\n        ))}\n      </>\n    )}\n  </div>\n);\n  };\n\nexport default LinkList;"]},"metadata":{},"sourceType":"module"}